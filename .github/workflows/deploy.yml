name: Drupal CI/CD

on:
  push:
    branches: [main]

env:
  AWS_REGION: eu-north-1
  EKS_CLUSTER_NAME: drupal-eks
  ECR_REPOSITORY: drupal-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 3. Ensure ECR repository exists
      - name: Ensure ECR Repository Exists
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region $AWS_REGION || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY --region $AWS_REGION

      # 4. Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          region: ${{ env.AWS_REGION }}

      # 5. Build and push Docker image
      - name: Build and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA" >> $GITHUB_ENV

      # 6. Configure kubectl for EKS
      - name: Configure EKS Access
        run: |
          aws eks update-kubeconfig \
            --region $AWS_REGION \
            --name $EKS_CLUSTER_NAME

      # 7. Apply MySQL Deployment first
      - name: Deploy MySQL
        run: |
          kubectl apply -f k8s/deployment.yaml --selector='app=mysql'

      # 8. Wait until MySQL pod is ready
      - name: Wait for MySQL
        run: |
          kubectl wait --for=condition=ready pod -l app=mysql --timeout=300s

      # 9. Deploy Drupal (Concrete CMS)
      - name: Deploy Drupal
        run: |
          kubectl apply -f k8s/deployment.yaml --selector='app=concrete-cms'
          kubectl set image deployment/concrete-cms concrete-cms=$IMAGE_URI
          kubectl rollout status deployment/concrete-cms --timeout=300s
