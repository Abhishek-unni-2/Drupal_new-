name: Drupal CI/CD

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # -----------------------
      # Step 1: Checkout Code
      # -----------------------
      - name: Checkout Code
        uses: actions/checkout@v4

      # -----------------------
      # Step 2: Configure AWS
      # -----------------------
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # -----------------------
      # Step 3: Create ECR repo if not exists
      # -----------------------
      - name: Ensure ECR Repository Exists
        run: |
          aws ecr describe-repositories --repository-names drupal-app --region ${{ secrets.AWS_REGION }} || \
          aws ecr create-repository --repository-name drupal-app --region ${{ secrets.AWS_REGION }}

      # -----------------------
      # Step 4: Log in to ECR
      # -----------------------
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # -----------------------
      # Step 5: Build, Tag & Push Docker Image
      # -----------------------
      - name: Build and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: drupal-app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "âœ… Docker image pushed!"

      # -----------------------
      # Step 6: Connect to EKS
      # -----------------------
      - name: Connect to EKS
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name drupal-eks

      # -----------------------
      # Step 7: Deploy Kubernetes manifests
      # -----------------------
      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/

      # -----------------------
      # Step 8: Update Deployment with latest image
      # -----------------------
      - name: Update Drupal Deployment Image
        run: |
          kubectl set image deployment/concrete-cms \
          concrete-cms=$ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
