name: Drupal CI/CD

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout source code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: true  # if you have git submodules

      # Step 2: Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Ensure ECR repository exists
      - name: Ensure ECR Repository Exists
        run: |
          set -e
          aws ecr describe-repositories --repository-names drupal-app --region ${{ secrets.AWS_REGION }} || \
          aws ecr create-repository --repository-name drupal-app --region ${{ secrets.AWS_REGION }}

      # Step 4: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 5: Set Docker image info
      - name: Set Docker Variables
        run: |
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=drupal-app" >> $GITHUB_ENV
          echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      # Step 6: Build, tag, and push Docker image
      - name: Build and Push Docker Image
        run: |
          set -e
          echo "Building Docker image..."
          docker build --pull --cache-from $ECR_REGISTRY/$ECR_REPOSITORY:latest -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          echo "Pushing Docker image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          echo "âœ… Docker image pushed successfully!"

      # Optional: Multi-arch build (uncomment if needed)
      # - name: Multi-Arch Build and Push
      #   run: |
      #     docker buildx create --use
      #     docker buildx build --platform linux/amd64,linux/arm64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --push .
